# Changelog

- 4.0.0 (2019-03-18)
    * Fixes the @p collision bug described in urbit/arvo#1105.

      An error in the Hoon implementation of a permutation cipher used to
      encipher planet-sized atoms resulted in the cipher not being bijective,
      occasionally causing different inputs to produce the same output.

      This version updates the 'patp' family of functions to support the
      corrected cipher.

- 3.2.0 (2019-02-08)
    * Improvements to error reporting.  E.g., instead of 'clan("~nidso")'
      throwing an error labelled 'patp2hex', it will now throw one labelled
      'clan'.

- 3.1.1 (2018-12-01)
    * Short-circuit on isValidPatp and isValidPatq when there is no leading
      tilde.

- 3.1.0 (2018-11-16)
    * Exports 'isValidPatp' and 'isValidPatq' functions for checking the
      validity of @p and @q strings.

- 3.0.0 (2018-11-02)
    * Major library cleanup and API simplification.  Eliminates old, dead,
      or redundant code that had accrued over time.  Exposes patp, patp2dec,
      patp2hex, and hex2patp functions as the API core (and similarly for @q).
    * Adds proper in-library documentation, and beefs up the README.
    * Adds property tests for both internals and exposed functions.
    * Standardises output, e.g. by always including a leading tilde in @p
      values.

- 2.0.0 (2018-10-22)
    * Bundle/distribute as CommonJS.

- 1.4.0 (2018-10-10)
    * Add 'eqPatq' function for comparing @q values for equality (i.e., modulo
      leading zero bytes).
