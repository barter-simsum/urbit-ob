const BN = require('bn.js')

const u_a = new BN(255)
const u_b = new BN(256)
const u_c = new BN(65280)

const emm = [
  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  14,  15,
  16,  17, 18,  19,  20,  21,  22,  23,  24,  25,  26,  27,  28,  29,  30,  31,
  32,  33,  34,  35, 36,  37,  38,  39,  40,  41,  42,  43,  44,  45,  46,  47,
  48,  49,  50,  51,  52,  53, 54,  55,  56,  57,  58,  59,  60,  61,  62,  63,
  64,  65,  66,  67,  68,  69,  70,  71, 72,  73,  74,  75,  76,  77,  78,  79,
  80,  81,  82,  83,  84,  85,  86,  87,  88,  89, 90,  91,  92,  93,  94,  95,
  96,  97,  98,  99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
  112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
  128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
  144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
  160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
  176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
  192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
  208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
  224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
  240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255
  ]


const v0 = [
  71, 235, 196, 202,  11, 143, 250, 178, 182, 116,  94, 252, 253, 255, 179, 192,
  81,  44, 227, 152, 112,  90, 130,  43, 124, 103,  55,  75,  17, 147,  22, 224,
  27,  93,  51, 248, 218, 145, 146, 141,  48, 155,  54, 133,  41, 142, 207, 206,
  5, 236, 127, 110,  91, 176, 200, 216,  72,  23, 246, 251, 151, 122, 140, 219,
  14, 177, 135, 225, 201,  74,  36, 106, 0,  40, 247,   9, 203, 190,  53, 221,
  3, 121,  70, 132,  80,  46, 100, 181, 232, 197, 29,  62, 114, 213,  88, 153,
  243, 244,  86, 230,  69,  76, 123,  95,  96, 191, 150,  61, 210, 171,  20, 229,
  188, 159,  68,  19, 195, 125, 107,  59, 175,  49, 113, 242, 102, 128, 101, 105,
  237, 223, 118, 167, 240, 117,   4, 226, 144, 108, 208, 162, 129, 131,  99, 111,
  161,  77,  78, 185, 126, 205, 228, 233,  18, 194, 120, 249,  56,  85,  34, 154,
  98,  97, 241,  52,   7, 204,  16, 166,  58,  73, 234, 119,  50, 163,  12,  84,
  1, 214, 189, 238, 215,  82, 156,  66, 160,  33, 245, 115,  28,  24,  35,  57,
  173, 254, 172,  83, 168, 169, 64, 239, 165, 184, 139, 109, 148,  32,  26, 217,
  134,  39, 164, 174, 231, 222, 136,  47, 30, 199,  38, 211,  87,  25,  13, 138,
  193,   8, 170, 104, 212,  60,  89, 180,  10, 149, 45,  67,  15, 209, 186,  37,
  183,  65, 157, 158,  21,  92,  31, 198,   6,  42,  63,   2, 79, 137, 220, 187
  ].map(x => new BN(x))

const eff = m => v0[m]

// NOTE this appears to be a correct implementation
const fe = (r, a, b, m) => {
  const loop = (j, ell, arr) => {
    if (j > r) {
      return (
          r % 2 !== 0
        ? a.mul(ell).add(arr)
        : a.mul(arr).add(ell)
      )
    } else {
      const f = eff(arr)

      const tmp =
          j % 2 !== 0
        ? ell.add(f).mod(a)
        : ell.add(f).mod(b)

      return loop(j + 1, arr, tmp)
    }
  }

  const L = m.mod(a)
  const R = m.div(a)

  return loop(1, L, R)
}

const Fe = (r, a, b, k, m) => {
  const c = fe(r, a, b, m)
  return (
      c.lt(k)
    ? c
    : fe(r, a, b, c)
  )
}

const feis = arg =>
  Fe(4, u_a, u_b, u_c, new BN(arg))

module.exports = {
  eff,
  emm,
  fe,
  Fe,
  feis
}

